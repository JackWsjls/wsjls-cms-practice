<link rel="stylesheet" href="/css/header.css">
<div class="header">
	<h2>CMS</h2>
	<button class="btn btn-primary canvas_on" id="canvasOn">是否显示页面特效</button>
	<button class="btn btn-primary canvas_on" id="deleteBg">背景</button>
	<!-- Large modal -->
	<button class="btn btn-primary canvas_on" data-toggle="modal" data-target="#myModal">切换</button>
	<!-- Modal -->
	<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
	  <div class="modal-dialog" role="document">
	    <div class="modal-content">
	      <div class="modal-header">
	        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
	        <h4 class="modal-title" id="myModalLabel">Modal title</h4>
	      </div>
	      <div class="modal-body">
	        ...<bt/>
			模态框 没有插件
	      </div>
	      <div class="modal-footer">
	        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
	        <button type="button" class="btn btn-primary">Save changes</button>
	      </div>
	    </div>
	  </div>
	</div>
	<button class="btn btn-primary canvas_on" id="cms-admin">admin</button>
	<button class="btn btn-primary canvas_on" id="cms-bootbox">bootbox</button>

	<!-- Split button -->
	<div class="btn-group canvas_on pull-right" style="margin-right: 50px;">
	  <button type="button" class="btn btn-danger">
	  	<i class="glyphicon glyphicon-user"></i>
	  	Action
	  </button>
	  <button type="button" class="btn btn-danger dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
	    <span class="caret"></span>
	    <!-- <span class="sr-only">Toggle Dropdown</span> -->
	  </button>
	  <ul class="dropdown-menu">
	    <li id="cms-action"><a href="#"><span class="glyphicon glyphicon-cog" style="margin-right: 10px;"></span>action</a></li>
	    <li><a href="#"><span class="glyphicon glyphicon-info-sign" style="margin-right: 10px;"></span>help</a></li>
	    <li role="separator" class="divider"></li>
	    <li><a href="#" id="exit"><span class="glyphicon glyphicon-log-out" style="margin-right: 10px;"></span>exit</a></li>
	  </ul>
	</div>
</div>
<script>
$(function(){

	$('#exit').on('click', () => {
		window.location.href="/login";
	})

    $(".fakeloader").showLoader();

    $("#canvasOn").on("click", () => {
    	$("#canvas").hasClass('hidden') ? $("#canvas").removeClass('hidden') : $("#canvas").addClass('hidden')
    })        

    $(".home_content").addClass('noneBg');
    $(".menu_bg").addClass('noneBg');
    $("#deleteBg").on("click", () => {
    	$(".home_content").hasClass('noneBg') ? $(".home_content").removeClass('noneBg') : $(".home_content").addClass('noneBg')        	
    	$(".menu_bg").hasClass('noneBg') ? $(".menu_bg").removeClass('noneBg') : $(".menu_bg").addClass('noneBg')
    })

    $('#myModal').on('shown.bs.modal', () => {
	  // $('#myInput').focus()
	})

    $('#cms-admin').on('click', () => {
        BootstrapDialog.show({
        	size: 'BootstrapDialog.SIZE_WIDE',
        	title: 'admin&&bootstrap-dialog',
            message: '<p>1234</p>',
            buttons: [{
            	label: '保存',
            	cssClass: 'btn-success',
                hotkey: 13, // Enter.
                cssClass: 'login-dialog',
                action: function() {
                    alert('You pressed Enter.');
                }
            },{
            	label: '返回',
            	hotkey: 8, // Enter.
                action: function(dialogRef){
                    dialogRef.close();
                }
            }]
        })
    })

    $('#cms-action').on('click', () => {
        BootstrapDialog.show({
        	size: 'BootstrapDialog.SIZE_WIDE',
        	title: '设置&&bootstrap-dialog',
            message: $('<div></div>').load('/views/bootstrapdialog/password.html'),
            buttons: [{
            	label: '保存',
            	cssClass: 'btn-success',
                hotkey: 13, // Enter.
                cssClass: 'login-dialog',
                action: function() {
                    console.log('You pressed Enter.');
                    console.log($('#native-word').val());
                    console.log($('#native-update').val())
                    console.log($('#native-confirm').val())
                }
            },{
            	label: '返回',
            	hotkey: 8, // Enter.
                action: function(dialogRef){
                    dialogRef.close();
                }
            }]
        })
    })

    $('#cms-bootbox').on('click', () => {
    	bootbox.alert("This is the default alert!");
  //   	bootbox.alert("This is an alert with a callback!", function(){ console.log('This was logged in the callback!'); });
		// bootbox.alert({
		//     message: "This is an alert with a callback!",
		//     callback: function () {
		//         console.log('This was logged in the callback!');
		//     }
		// })

		// bootbox.alert({
		//     message: "This is the small alert!",
		//     // size: 'large'
		//     size: 'small'
		// });
		
		// bootbox.alert({
		//     message: "This is an alert with an additional class!",
		//     className: 'bb-alternate-modal',
		//     backdrop: true
		// });
		// bootbox.confirm("This is the default confirm!", function(result){ console.log('This was logged in the callback: ' + result); });
		// bootbox.confirm({
		//     message: "This is a confirm with custom button text and color! Do you like it?",
		//     buttons: {
		//         confirm: {
		//             label: 'Yes',
		//             className: 'btn-success'
		//         },
		//         cancel: {
		//             label: 'No',
		//             className: 'btn-danger'
		//         }
		//     },
		//     callback: function (result) {
		//         console.log('This was logged in the callback: ' + result);
		//     }
		// });
		// bootbox.confirm({
		//     title: "Destroy planet?",
		//     message: "Do you want to activate the Deathstar now? This cannot be undone.",
		//     buttons: {
		//         cancel: {
		//             label: '<i class="fa fa-times"></i> Cancel'
		//         },
		//         confirm: {
		//             label: '<i class="fa fa-check"></i> Confirm'
		//         }
		//     },
		//     callback: function (result) {
		//         console.log('This was logged in the callback: ' + result);
		//     }
		// });
		// bootbox.prompt("This is the default prompt!", function(result){ console.log(result); });
		// bootbox.prompt({
		//     title: "This is a prompt with a set of checkbox inputs!",
		//     inputType: 'checkbox',
		//     inputOptions: [
		//         {
		//             text: 'Choice One',
		//             value: '1',
		//         },
		//         {
		//             text: 'Choice Two',
		//             value: '2',
		//         },
		//         {
		//             text: 'Choice Three',
		//             value: '3',
		//         }
		//     ],
		//     callback: function (result) {
		//         console.log(result);
		//     }
		// });
		// bootbox.prompt({
		//     title: "This is a prompt with a date input!",
		//     inputType: 'date',
		//     callback: function (result) {
		//         console.log(result);
		//     }
		// });
		// bootbox.prompt({
		//     title: "This is a prompt with an email input!",
		//     inputType: 'email',
		//     callback: function (result) {
		//         console.log(result);
		//     }
		// });
		// bootbox.prompt({
		//     title: "This is a prompt with a number input!",
		//     inputType: 'number',
		//     callback: function (result) {
		//         console.log(result);
		//     }
		// });
		// bootbox.prompt({
		//     title: "This is a prompt with a password input!",
		//     inputType: 'password',
		//     callback: function (result) {
		//         console.log(result);
		//     }
		// });
		// bootbox.prompt({
		//     title: "This is a prompt with select!",
		//     inputType: 'select',
		//     inputOptions: [
		//         {
		//             text: 'Choose one...',
		//             value: '',
		//         },
		//         {
		//             text: 'Choice One',
		//             value: '1',
		//         },
		//         {
		//             text: 'Choice Two',
		//             value: '2',
		//         },
		//         {
		//             text: 'Choice Three',
		//             value: '3',
		//         }
		//     ],
		//     callback: function (result) {
		//         console.log(result);
		//     }
		// });
		// bootbox.prompt({
		//     title: "This is a prompt with a textarea!",
		//     inputType: 'textarea',
		//     callback: function (result) {
		//         console.log(result);
		//     }
		// });
		// bootbox.prompt({
		//     title: "This is a prompt with a time input!",
		//     inputType: 'time',
		//     callback: function (result) {
		//         console.log(result);
		//     }
		// });

		// var dialog = bootbox.dialog({
		//     message: '<p class="text-center">Please wait while we do something...</p>',
		//     closeButton: false
		// });
		// // do something in the background
		// dialog.modal('hide');

		// var dialog = bootbox.dialog({
		//     title: 'A custom dialog with init',
		//     message: '<p><i class="fa fa-spin fa-spinner"></i> Loading...</p>'
		// });
		// dialog.init(function(){
		//     setTimeout(function(){
		//         dialog.find('.bootbox-body').html('I was loaded after the dialog was shown!');
		//     }, 3000);
		// });

		// var dialog = bootbox.dialog({
		// title: 'A custom dialog with buttons and callbacks',
		// message: "<p>This dialog has buttons. Each button has it's own callback function.</p>",
		// buttons: {
		//     cancel: {
		//         label: "I'm a custom cancel button!",
		//         className: 'btn-danger',
		//         callback: function(){
		//             Example.show('Custom cancel clicked');
		//         }
		//     },
		//     noclose: {
		//         label: "I'm a custom button, but I don't close the modal!",
		//         className: 'btn-warning',
		//         callback: function(){
		//             Example.show('Custom button clicked');
		//             return false;
		//         }
		//     },
		//     ok: {
		//         label: "I'm a custom OK button!",
		//         className: 'btn-info',
		//         callback: function(){
		//             Example.show('Custom OK clicked');
		//         }
		//     }
		// }
		// });
    })	
})

</script>