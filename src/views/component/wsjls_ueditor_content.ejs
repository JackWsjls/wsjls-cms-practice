<!--style给定宽度可以影响编辑器的最终宽度-->
<div>
    <div class="h3">Ueditor</div>
    <script type="text/plain" id="editor" style="width:1024px;height:200px;">
        // <p>这里我可以写一些输入提示</p>
    </script>
</div>
<div id="btns">
    <div>
        <button class="btn btn-default" onclick="getAllHtml()">获得整个html的内容</button>
        <button class="btn btn-default" onclick="getContent()">获得内容</button>
        <button class="btn btn-default" onclick="setContent()">写入内容</button>
        <button class="btn btn-default" onclick="setContent(true)">追加内容</button>
        <button class="btn btn-default" onclick="getContentTxt()">获得纯文本</button>
        <button class="btn btn-default" onclick="getPlainTxt()">获得带格式的纯文本</button>
        <button class="btn btn-default" onclick="hasContent()">判断是否有内容</button>
        <button class="btn btn-default" onclick="setFocus()">使编辑器获得焦点</button>
        <button class="btn btn-default" onmousedown="isFocus(event)">编辑器是否获得焦点</button>
        <button class="btn btn-default" onmousedown="setblur(event)" >编辑器失去焦点</button>

    </div>
    <div>
        <button class="btn btn-default" onclick="getText()">获得当前选中的文本</button>
        <button class="btn btn-default" onclick="insertHtml()">插入给定的内容</button>
        <button id="enable" class="btn btn-default" onclick="setEnabled()">可以编辑</button>
        <button class="btn btn-default" onclick="setDisabled()">不可编辑</button>
        <button class="btn btn-default" onclick=" UE.getEditor('editor').setHide()">隐藏编辑器</button>
        <button class="btn btn-default" onclick=" UE.getEditor('editor').setShow()">显示编辑器</button>
        <button class="btn btn-default" onclick=" UE.getEditor('editor').setHeight(300)">设置高度为300默认关闭了自动长高</button>
    </div>
    <div>
        <button class="btn btn-default" onclick="getLocalData()" >获取草稿箱内容</button>
        <button class="btn btn-default" onclick="clearLocalData()" >清空草稿箱</button>
    </div>
</div>
<div>
    <button class="btn btn-default" onclick="createEditor()">创建编辑器</button>
    <button class="btn btn-default" onclick="deleteEditor()">删除编辑器</button>
</div>
<script type="text/javascript">
    UE.getEditor('editor',{
        // //这里可以选择自己需要的工具按钮名称,此处仅选择如下五个
        // toolbars:[['FullScreen', 'Source', 'Undo', 'Redo','Bold','test']],
        // //focus时自动清空初始化时的内容
        // autoClearinitialContent:true,
        // //关闭字数统计
        // wordCount:false,
        // //关闭elementPath
        // elementPathEnabled:false,
        // //默认的编辑区域高度
        // initialFrameHeight:300
        // //更多其他参数，请参考ueditor.config.js中的配置项
    })


    function isFocus(e){
        alert(UE.getEditor('editor').isFocus());
        UE.dom.domUtils.preventDefault(e)
    }
    function setblur(e){
        UE.getEditor('editor').blur();
        UE.dom.domUtils.preventDefault(e)
    }
    function insertHtml() {
        var value = prompt('插入html代码', '');
        UE.getEditor('editor').execCommand('insertHtml', value)
    }
    function createEditor() {
        enableBtn();
        UE.getEditor('editor');
    }
    function getAllHtml() {
        alert(UE.getEditor('editor').getAllHtml())
    }
    function getContent() {
        var arr = [];
        arr.push("使用editor.getContent()方法可以获得编辑器的内容");
        arr.push("内容为：");
        arr.push(UE.getEditor('editor').getContent());
        alert(arr.join("\n"));
    }
    function getPlainTxt() {
        var arr = [];
        arr.push("使用editor.getPlainTxt()方法可以获得编辑器的带格式的纯文本内容");
        arr.push("内容为：");
        arr.push(UE.getEditor('editor').getPlainTxt());
        alert(arr.join('\n'))
    }
    function setContent(isAppendTo) {
        var arr = [];
        arr.push("使用editor.setContent('欢迎使用ueditor')方法可以设置编辑器的内容");
        UE.getEditor('editor').setContent('欢迎使用ueditor', isAppendTo);
        alert(arr.join("\n"));
    }
    function setDisabled() {
        UE.getEditor('editor').setDisabled('fullscreen');
        disableBtn("enable");
    }

    function setEnabled() {
        UE.getEditor('editor').setEnabled();
        enableBtn();
    }

    function getText() {
        //当你点击按钮时编辑区域已经失去了焦点，如果直接用getText将不会得到内容，所以要在选回来，然后取得内容
        var range = UE.getEditor('editor').selection.getRange();
        range.select();
        var txt = UE.getEditor('editor').selection.getText();
        alert(txt)
    }

    function getContentTxt() {
        var arr = [];
        arr.push("使用editor.getContentTxt()方法可以获得编辑器的纯文本内容");
        arr.push("编辑器的纯文本内容为：");
        arr.push(UE.getEditor('editor').getContentTxt());
        alert(arr.join("\n"));
    }
    function hasContent() {
        var arr = [];
        arr.push("使用editor.hasContents()方法判断编辑器里是否有内容");
        arr.push("判断结果为：");
        arr.push(UE.getEditor('editor').hasContents());
        alert(arr.join("\n"));
    }
    function setFocus() {
        UE.getEditor('editor').focus();
    }
    function deleteEditor() {
        disableBtn();
        UE.getEditor('editor').destroy();
    }
    function disableBtn(str) {
        var div = document.getElementById('btns');
        var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
        for (var i = 0, btn; btn = btns[i++];) {
            if (btn.id == str) {
                UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
            } else {
                btn.setAttribute("disabled", "true");
            }
        }
    }
    function enableBtn() {
        var div = document.getElementById('btns');
        var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
        for (var i = 0, btn; btn = btns[i++];) {
            UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
        }
    }

    function getLocalData () {
        alert(UE.getEditor('editor').execCommand( "getlocaldata" ));
    }

    function clearLocalData () {
        UE.getEditor('editor').execCommand( "clearlocaldata" );
        alert("已清空草稿箱")
    }
</script>